//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "team")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub founding_date: Date,
    pub address: String,
    pub zip_code: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::competition::Entity")]
    Competition,
    #[sea_orm(has_many = "super::swimmer::Entity")]
    Swimmer,
}

impl Related<super::competition::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Competition.def()
    }
}

impl Related<super::swimmer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Swimmer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
